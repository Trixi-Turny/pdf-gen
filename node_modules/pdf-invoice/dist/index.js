'use strict';

var pdfKit = require('pdfkit');
var moment = require('moment');
var numeral = require('numeral');
var i18n = require('./i18n');

var TEXT_SIZE = 8;
var CONTENT_LEFT_PADDING = 30;

function PDFInvoice(_ref) {
  var company = _ref.company;
  var customer = _ref.customer;
  var items = _ref.items;
  

  var date = new Date();
  var charge = {
    createdAt: date.getDay() + '/' + date.getMonth() + '/' + date.getFullYear(),
    amount: items.reduce(function (acc, item) {
      return acc + item.amount;
    }, 0)
  };
  var doc = new pdfKit({ size: 'A4', margin: 50 });
  doc.registerFont('tableheading', 'assets/Montserrat-Bold.otf', 'tableheading')

  doc.fillColor('#333333');

  var translate = i18n[PDFInvoice.lang];
  moment.locale(PDFInvoice.lang);

  var divMaxWidth = 550;
  var table = {
    x: CONTENT_LEFT_PADDING,
    y: 300,
    inc: [0, 70, 300, 380, 450 ]
  };

  return {
    genHeader: function genHeader() {
      console.log("generating header");

      doc.image(company.logo, CONTENT_LEFT_PADDING, 20, {
        fit: [156.75, 31.75],
        align: 'center',
        valign: 'center'
     });




      doc.fontSize(16).fillColor('#000000').text( 'Statement' + '\n'+ moment().format('MMMM, DD, YYYY'), CONTENT_LEFT_PADDING, 60, {
        align: 'right',

      }).fillColor('#000000');
      doc.fontSize(14).text(customer.name+ '\n'+ customer.address.addressLine1+'\n'+ customer.address.addressLine2+'\n'+ customer.address.addressLine3+ '\n'+ customer.address.postCode, CONTENT_LEFT_PADDING+ 20 , 150, { align: 'left'
    }).fillColor('#333333');

     
    },
    genFooter: function genFooter() {
      doc.fillColor('#cccccc');

      doc.fontSize(12).text(company.name, CONTENT_LEFT_PADDING, 750);

      doc.text(company.address);
      doc.text(company.phone);
      doc.text(company.email);

      doc.fillColor('#333333');

      console.log("footer is done");
    },
    genCustomerInfos: function genCustomerInfos() {
      doc.fontSize(TEXT_SIZE).text(translate.chargeFor, CONTENT_LEFT_PADDING, 400);

      doc.text(customer.name + ' <' + customer.email + '>');
    },
    genTableHeaders: function genTableHeaders() {
      console.log("generating table header");
      var tablehead = ['Date', 'Description', 'Local amount \n (if applicable', 'FX Rate \n (if applicable)', 'Amount'].forEach(function (text, i) {
        doc.font('tableheading').text(text, table.x + table.inc[i], table.y);
    
        doc.text(tablehead, CONTENT_LEFT_PADDING, 450, {
  
        }).fillColor('#333333');
        var borderOffset = doc.currentLineHeight() + 70;
        // doc.strokeColor('#ffb300').moveTo(0, borderOffset).lineTo(divMaxWidth, 0);
      
      });
  

      console.log("done");
    },
    genTableRow: function genTableRow() {
      console.log("generating table row");
      items.map(function (item) {
        return Object.assign({}, item, {
          amount: numeral(item.amount).format('$ 0,00.00')
        });
      }).forEach(function (item, itemIndex) {
      
        ['date', 'description', 'local_amount', 'fx_rate', 'amount'].forEach(function (field, i) {
          doc.fontSize(TEXT_SIZE).text(item[field], table.x +table.inc[i], table.y + TEXT_SIZE + 6 + itemIndex * 20);
      
        });

      });
    },

    genLine: function genLine(){

      var borderOffset = doc.currentLineHeight() + table.y ;
      doc.strokeColor('#ffb300').moveTo(0, borderOffset).lineTo(600, borderOffset);

      var offset = doc.currentLineHeight() + 2;
      doc.moveTo(0, 0).lineTo(divMaxWidth, 0).stroke();
    },
    genTableLines: function genTableLines() {
      console.log("generating table lines");
      var offset = doc.currentLineHeight() + 2;
      // doc.moveTo(table.x, table.y + offset).lineTo(divMaxWidth, table.y + offset).stroke();
    },
    generate: function generate() {
      this.genHeader();
      this.genTableHeaders();
      this.genLine();
      this.genTableLines();
      this.genTableRow();
      // this.genCustomerInfos();
      this.genFooter();

      doc.end();
    },


    get pdfkitDoc() {
      return doc;
    }
  };
}

PDFInvoice.lang = 'pt_BR';

module.exports = PDFInvoice;