'use strict';

var pdfKit = require('pdfkit');
var moment = require('moment');
var numeral = require('numeral');
var i18n = require('./i18n');

var TEXT_SIZE = 10;
var TABLE_HEADER = 10;
var CONTENT_LEFT_PADDING = 30;
var boldFontUrl = 'assets/montserrat-semiBold.ttf';

function PDFInvoice(_ref) {
  var company = _ref.company;
  var customer = _ref.customer;
  var items = _ref.items;

  

  var date = new Date();
  var charge = {
    createdAt: date.getDay() + '/' + date.getMonth() + '/' + date.getFullYear(),
    amount: items.reduce(function (acc, item) {
      return acc + item.amount;
    }, 0)
  };

  //bufferpages for adding page numbers
  var doc = new pdfKit({ size: 'A4', margin: 50, bufferPages: true });
  doc.registerFont('tableheading', 'assets/montserrat-semiBold.ttf', 'tableheading')
  

  doc.fillColor('#333333');

  var translate = i18n[PDFInvoice.lang];
  moment.locale(PDFInvoice.lang);

  var divMaxWidth = 550;
  var table = {
    x: CONTENT_LEFT_PADDING,
    y: 300,

    //distance of fields in table from left
    inc: [0, 70, 300, 380, 450 ]
  };

  return {
    genHeader: function genHeader() {
      console.log("generating header");

      doc.image(company.logo, CONTENT_LEFT_PADDING, 20, {
        fit: [156.75, 31.75],
        align: 'center',
        valign: 'center'
     });


    //vertical line next to address: 
    doc.moveTo(40, 245)                           
    .lineTo(40, 150)  
    .lineWidth(1.2) 
    .strokeColor('#ffb300')                     
    .stroke()  
      doc.font('assets/montserrat-semiBold.ttf').fontSize(16).fillColor('#000000').text( 'Statement' + '\n'+ moment().format('DD, MMM, YYYY'), CONTENT_LEFT_PADDING, 60, {
        align: 'right',
  

      }).fillColor('#000000');
      doc.font('assets/montserrat-semiBold.ttf').fontSize(12).text(customer.name+ '\n'+ customer.address.addressLine1+'\n'+ customer.address.addressLine2+'\n'+ customer.address.addressLine3+ '\n'+ customer.address.postCode + '\n'+ customer.address.country, CONTENT_LEFT_PADDING+ 20 , 150, { align: 'left'
    }).fillColor('#333333');

     
    },
    genFooter: function genFooter() {
      doc.fillColor('#cccccc');

      doc.fontSize(12).text(company.name, CONTENT_LEFT_PADDING, 750);

      doc.text(company.address);
      doc.text(company.phone);
      doc.text(company.email);

      doc.fillColor('#333333');

      console.log("footer is done");
    },
    genCustomerInfos: function genCustomerInfos() {
      doc.fontSize(TEXT_SIZE).text(translate.chargeFor, CONTENT_LEFT_PADDING, 400);

      doc.text(customer.name + ' <' + customer.email + '>');
    },
    genTableHeaders: function genTableHeaders() {
      console.log("generating table header");
      var secondRow = ['', '', '(if applicable)', '(if applicable)', ''];
      var tablehead = ['Date', 'Description', 'Local amount' , 'FX Rate', 'Amount'].forEach(function (text, i) {
    
      doc.font('assets/montserrat-semiBold.ttf').fontSize(TABLE_HEADER).text(text.substring(), table.x + table.inc[i], table.y-5);
      
        doc.moveDown();
        // doc.text(tablehead, CONTENT_LEFT_PADDING, 50, {
  
        // }).fillColor('#333333');
        // var borderOffset = doc.currentLineHeight() + 70;
        // doc.strokeColor('#ffb300').moveTo(0, borderOffset).lineTo(divMaxWidth, 0);
      
      });
      secondRow.forEach(function(str, i) {
        doc.font('assets/montserrat-light.ttf').fontSize(7).text(str, table.x + table.inc[i], table.y+5);
        
        
      }) 
  

      console.log("done");
    },
    genTableRow: function genTableRow() {
      console.log("generating table row");
      items.map(function (item) {
        return Object.assign({}, item, {
          amount: numeral(item.amount).format('$ 0,00.00')
        });
      }).forEach(function (item, itemIndex) {
       ['date', 'description', 'local_amount', 'fx_rate', 'amount'].forEach(function (field, i) {
          if(item[field] && item[field].length > 35){
            item[field] = item[field].substring(0, 35);
          }
          doc.font('assets/montserrat-light.ttf').fontSize(TEXT_SIZE).text(item[field], table.x + table.inc[i], table.y + 20 +  + itemIndex * 30);
      //     var offset = doc.currentLineHeight();
      // doc.moveTo(table.x, table.y + offset).lineTo(divMaxWidth, table.y + offset).strokeColor('#cccccc').stroke();
   
        });


        // doc.text(tableRow, CONTENT_LEFT_PADDING, 500, {
          
        // }).fillColor('#333333');


      });
    },

    genLine: function genLine(){

      // var borderOffset = doc.currentLineHeight() + table.y ;
      // doc.strokeColor('#ffb300').moveTo(0, borderOffset).lineTo(650, borderOffset);

      var offset = doc.currentLineHeight() + 2;
      doc.moveTo(700, 320)                           
      .lineTo(0, 320)  
      .lineWidth(1.3) 
      .strokeColor('#ffb300')                     
      .stroke()  
      // doc.moveTo(0, 0).lineTo(divMaxWidth, 0).stroke();
    },
    genTableLines: function genTableLines() {
      console.log("generating table lines");
      // var offset = doc.currentLineHeight() + 2;
      // doc.moveTo(table.x, table.y + offset).lineTo(divMaxWidth, table.y + offset).strokeColor('#cccccc').stroke();
    },

    genPageNumbers: function genPageNumbers() {

      var range = doc.bufferedPageRange();
      for(var i = 0; i < range.count; i++){
        doc.switchToPage(i);
        doc.font('assets/montserrat-semiBold.ttf').fontSize(10).text('Page '+ (i+1) +' of '+ range.count, CONTENT_LEFT_PADDING, 750, {
          align: 'right',
        }).fillColor('#000000');
      }
    },
    generate: function generate() {
      this.genHeader();
      this.genTableHeaders();
      this.genLine();
      this.genTableLines();
      this.genTableRow();
      // this.genCustomerInfos();
      this.genFooter();
      this.genPageNumbers();
      doc.flushPages();
      doc.end();
    },


    get pdfkitDoc() {
      return doc;
    }
  };
}

PDFInvoice.lang = 'pt_BR';

module.exports = PDFInvoice;